import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load seaborn's built-in datasets
titanic = sns.load_dataset("titanic")
tips = sns.load_dataset("tips")

# Display the first few rows to confirm
print(titanic.head())
print(tips.head())

# 1) CountPlot:
sns.countplot(x='survived', data=titanic)
plt.show()

# 2) Pie Chart:
titanic['sex'].value_counts().plot(kind="pie", autopct="%.2f")
plt.show()

# 3) Histogram:
plt.hist(titanic['age'], bins=5)
plt.show()

# 4) Distplot:
sns.histplot(titanic['age'], kde=True)
plt.show()

# 5) Scatter Plot:
sns.scatterplot(x=tips["total_bill"], y=tips["tip"])
plt.show()

sns.scatterplot(x=tips["total_bill"], y=tips["tip"], hue=tips["sex"])
plt.show()

# 6) Bar Plot:
sns.barplot(x='pclass', y='age', data=titanic)
plt.show()

# Multivariate analysis using Bar plot:
sns.barplot(x='pclass', y='fare', hue='sex', data=titanic)
plt.show()

# 7) Boxplot:
sns.boxplot(x='sex', y='age', data=titanic)
plt.show()

# Multivariate analysis with boxplot:
sns.boxplot(x='sex', y='age', hue='survived', data=titanic)
plt.show()

# 8) Distplot:
sns.kdeplot(data=titanic[titanic['survived'] == 0]['age'], label='Did Not Survive', color='blue')
sns.kdeplot(data=titanic[titanic['survived'] == 1]['age'], label='Survived', color='orange')
plt.title("Age Distribution by Survival Status")
plt.xlabel("Age")
plt.ylabel("Density")
plt.legend()
plt.show()

# Heatmap:
pd.crosstab(titanic['pclass'], titanic['survived'], margins=True)
sns.heatmap(pd.crosstab(titanic['pclass'], titanic['survived']), annot=True, cmap="YlGnBu", linewidths=0.5)
plt.title("Survival Count by Passenger Class")
plt.xlabel("Survived")
plt.ylabel("Passenger Class")
plt.show()

# Cluster map:
g = sns.clustermap(pd.crosstab(titanic['parch'], titanic['survived']), annot=True, cmap="coolwarm")
g.fig.suptitle("Clustermap of Parch vs Survived", y=1.05)
plt.show()


###Explanation:
Importing Libraries and Loading Data:
python
Copy
Edit
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load seaborn's built-in datasets
titanic = sns.load_dataset("titanic")
tips = sns.load_dataset("tips")

# Display the first few rows to confirm
print(titanic.head())
print(tips.head())
NumPy and Pandas are used for data manipulation.

Matplotlib and Seaborn are used for visualization.

Seabornâ€™s built-in Titanic dataset is used to perform various visualizations.

CountPlot:
python
Copy
Edit
sns.countplot(x='survived', data=titanic)
plt.show()
This countplot visualizes the number of survivors (0 = Not Survived, 1 = Survived).

Pie Chart (Sex Distribution):
python
Copy
Edit
titanic['sex'].value_counts().plot(kind="pie", autopct="%.2f")
plt.show()
A pie chart shows the distribution of passengers by sex, helping us see the proportion of males and females.

Histogram and Distplot (Age Distribution):
python
Copy
Edit
plt.hist(titanic['age'], bins=5)
plt.show()

sns.histplot(titanic['age'], kde=True)
plt.show()
Histogram displays the distribution of ages across passengers, while Distplot includes the KDE (Kernel Density Estimation) for a smoother visualization.

Scatter Plot:
python
Copy
Edit
sns.scatterplot(x=tips["total_bill"], y=tips["tip"])
plt.show()

sns.scatterplot(x=tips["total_bill"], y=tips["tip"], hue=tips["sex"])
plt.show()
Scatter plots help visualize the relationship between total bill and tip, with the second plot incorporating hue to color by sex.

Bar Plot:
python
Copy
Edit
sns.barplot(x='pclass', y='age', data=titanic)
plt.show()

sns.barplot(x='pclass', y='fare', hue='sex', data=titanic)
plt.show()
Bar plots are used for multivariate analysis, showing the relationship between classes, ages, and fares.

Boxplot (Age Distribution by Sex):
python
Copy
Edit
sns.boxplot(x='sex', y='age', data=titanic)
plt.show()

sns.boxplot(x='sex', y='age', hue='survived', data=titanic)
plt.show()
The boxplots show the distribution of ages between males and females, and the second one incorporates survival status to see if survival had any effect on age distribution.

Kernel Density Estimation (KDE) for Age Distribution by Survival:
python
Copy
Edit
sns.kdeplot(data=titanic[titanic['survived'] == 0]['age'], label='Did Not Survive', color='blue')
sns.kdeplot(data=titanic[titanic['survived'] == 1]['age'], label='Survived', color='orange')

plt.title("Age Distribution by Survival Status")
plt.xlabel("Age")
plt.ylabel("Density")
plt.legend()
plt.show()
The KDE plot shows the age distribution for passengers who survived vs. those who did not.

Heatmap:
python
Copy
Edit
pd.crosstab(titanic['pclass'], titanic['survived'], margins=True)
sns.heatmap(pd.crosstab(titanic['pclass'], titanic['survived']), annot=True, cmap="YlGnBu", linewidths=0.5)
plt.title("Survival Count by Passenger Class")
plt.xlabel("Survived")
plt.ylabel("Passenger Class")
plt.show()
The heatmap visualizes the survival count across different passenger classes.

Clustermap:
python
Copy
Edit
g = sns.clustermap(pd.crosstab(titanic['parch'], titanic['survived']), annot=True, cmap="coolwarm")
g.fig.suptitle("Clustermap of Parch vs Survived", y=1.05)
plt.show()
The clustermap is useful for hierarchical clustering to see the relationship between "Parch" (number of parents/children aboard) and survival.

Observations from the Visualizations:
Survival rate: The countplot shows the survival distribution, with fewer passengers surviving.

Age distribution: The boxplot and KDE plot highlight that survivors tended to be younger compared to those who didn't survive.

Sex distribution: The pie chart and boxplot show more male passengers, and the survival rate was higher among females.

Passenger Class: The bar plot shows that wealthier passengers (first class) had a higher survival rate.

Fare distribution: Passengers with higher fares had a higher chance of survival.