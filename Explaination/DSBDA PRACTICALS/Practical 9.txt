📦 1. Importing Libraries

import numpy as np
import pandas as pd
numpy: For numerical operations.

pandas: For data manipulation using DataFrames.

📊 2. Loading Datasets from Seaborn

import matplotlib.pyplot as plt
import seaborn as sns

# Load seaborn's built-in datasets
titanic = sns.load_dataset("titanic")
tips = sns.load_dataset("tips")

# Display the first few rows to confirm
print(titanic.head())
print(tips.head())
seaborn: Visualization library built on top of matplotlib.

titanic: Passenger data from Titanic (includes age, sex, survival, etc.).

tips: Dataset about restaurant bills and tips.

📈 3. Countplot of Survival

sns.countplot(x='survived', data=titanic)
plt.show()
Countplot: Bar chart that counts occurrences of values in a category.

survived: 0 = did not survive, 1 = survived.

🥧 4. Pie Chart of Gender Distribution

titanic['sex'].value_counts().plot(kind="pie", autopct="%.2f")
plt.show()
Pie Chart: Shows proportion of each gender.

autopct="%.2f": Displays percentage with 2 decimal points.

🧓 5. Histogram of Age Distribution

plt.hist(titanic['age'], bins=5)
plt.show()
Histogram: Groups continuous data (here, age) into bins.

📊 6. Histogram with KDE

sns.histplot(titanic['age'], kde=True)
plt.show()
Adds KDE (Kernel Density Estimation) curve to show smooth distribution of age.

📍 7. Scatter Plot: Total Bill vs Tip

sns.scatterplot(x=tips["total_bill"], y=tips["tip"])
plt.show()
Scatter Plot: Shows relationship between two numerical values.

🎯 8. Scatter Plot with Hue (Sex)

sns.scatterplot(x=tips["total_bill"], y=tips["tip"], hue=tips["sex"])
plt.show()
hue: Adds color by gender to distinguish data points.

📊 9. Bar Plot: Age by Passenger Class

sns.barplot(x='pclass', y='age', data=titanic)
plt.show()
Bar Plot: Compares average age across passenger classes (pclass: 1st, 2nd, 3rd).

🎨 10. Bar Plot: Fare by Class & Sex

sns.barplot(x='pclass', y='fare', hue='sex', data=titanic)
plt.show()
Visualizes how fare varies by class and gender.

📦 11. Boxplot: Age by Gender

sns.boxplot(x='sex', y='age', data=titanic)
plt.show()
Boxplot: Shows spread and median of age for each gender.

Middle line = median, box = interquartile range.

🔍 12. Boxplot: Age by Gender and Survival

sns.boxplot(x='sex', y='age', hue='survived', data=titanic)
plt.show()
Compares age across gender and whether they survived or not.

🔥 13. KDE Plot: Age Distribution by Survival

sns.kdeplot(data=titanic[titanic['survived'] == 0]['age'], label='Did Not Survive', color='blue')
sns.kdeplot(data=titanic[titanic['survived'] == 1]['age'], label='Survived', color='orange')

plt.title("Age Distribution by Survival Status")
plt.xlabel("Age")
plt.ylabel("Density")
plt.legend()
plt.show()
KDE Plot: Compares age distribution between survivors and non-survivors.

🧮 14. Cross Tabulation: Class vs Survival

pd.crosstab(titanic['pclass'], titanic['survived'], margins=True)
Crosstab: Frequency table of passenger class vs survival.

🧊 15. Heatmap: Class vs Survival

sns.heatmap(pd.crosstab(titanic['pclass'], titanic['survived']), annot=True, cmap="YlGnBu", linewidths=0.5)
plt.title("Survival Count by Passenger Class")
plt.xlabel("Survived")
plt.ylabel("Passenger Class")
plt.show()
Heatmap: Visual representation of the crosstab with color intensity.

🧬 16. Clustermap: Parch (Parents/Children) vs Survival
python
Copy
Edit
g = sns.clustermap(pd.crosstab(titanic['parch'], titanic['survived']), annot=True, cmap="coolwarm")
g.fig.suptitle("Clustermap of Parch vs Survived", y=1.05)
plt.show()
Clustermap: Groups similar rows/columns based on patterns.

parch: Number of parents/children aboard.

